{"version":3,"sources":["app/scripts/album.js","app/scripts/app.js","app/scripts/collection.js","app/scripts/landing.js","app/scripts/profile.js","app/server.js"],"names":[],"mappingsvLA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAtEA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA9DA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAvBA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AAAA","file":"public/javascripts/app.js","sourcesContent":["/* jQuery effects to album */\n\n/* Cretaing albumPicasso object*/\nvar albumPicasso = {\n\tname : 'The Colors',\n\tartist : 'Pablo Picasso',\n\tlabel : 'Cubism',\n\tyear : '1881',\n\talbumArtUrl : '/images/album_placeholder.png',\n\tsongs : [\n\t\t\t\t{ name : 'Blue', length : '4:26' },\n\t\t\t\t{ name : 'Green', length : '3;14' },\n\t\t\t\t{ name : 'Red', length : '5:01' },\n\t\t\t\t{ name : 'Pink', length : '3:21' },\n\t\t\t\t{ name : 'Magenta', length : '2:15' }\n\t]\n};\n\n\n/* Creating albumMarconi object*/\nvar albumMarconi = {\n\tname : 'Marconi',\n\tartist : 'Guglielmo Marconi',\n\tlabel : 'EM',\n\tyear : '1909',\n\talbumArtUrl : '/images/album_placeholder.png',\n\tsongs : [\n\t\t\t\t{ name : 'Hello, Operator?', length : '1:01' },\n\t\t\t\t{ name : 'Ring, ring, ring', length : '5.01' },\n\t\t\t\t{ name : 'Fits in your pocket', length : '3:21'},\n\t\t\t\t{ name : 'Can you hear me now?', length : '3:14'},\n\t\t\t\t{ name : 'Wrong phone number', length : '2:15'},\n\t]\n};\n\n/* Track score function returns a complete JQuery object */\nvar currentPlayingSong = null;\n\nvar createSongRow = function(songNumber, songName, songLength) {\n\tvar template =\n\t\t\t'<tr>'\n\t\t+\t'\t<td class=\"song-number col-md-1\" data-song-number=\"' + songNumber + '\">' + songNumber + '</td>'\n\t\t+\t'\t<td class=\"col-md-9\">' + songName + '</td>'\n\t\t+\t'\t<td class=\"col-md-2\">' + songLength + '</td>'\n\t\t+ '</tr>'\n\t\t;\n\n\t\tvar $row = $(template);\n\n\t\t// Change from a song number to play button when the song isn't playing and we hover over the row.\n\t\tvar onHover = function(event) {\n\t\t\tsongNumberCell = $(this).find('.song-number');\n\t\t\tsongNumber = songNumberCell.data('song-number');\n\t\t\tif (songNumber !== currentPlayingSong) {\n\t\t\t\tsongNumberCell.html('<a class=\"album-song-button\"><i class=\"fa fa-play\"></i></a>');\n\t\t\t}\n\t\t};\n\n\t\t// Change from a play button to song number when the song isn't playing and we hover off the row.\n\t\tvar offHover = function(event) {\n\t\t\tsongNumberCell = $(this).find('.song-number');\n\t\t\tsongNumber = songNumberCell.data('song-number');\n\t\t\tif (songNumberCell !== currentPlayingSong) {\n\t\t\t\t\tsongNumberCell.html(songNumber);\n\t\t\t}\n\t\t};\n\n\t\t$row.find('.song-number').click(clickHandler);\n\t\t$row.hover(onHover, offHover);\n\t\treturn $row;\n};\n\n/* Create clickhandler to show play, pause or song number*/\nvar clickHandler = function(event) {\n\tsongNumber = $(this).data('song-number');\n\n\tif (currentPlayingSong !== null) {\n\t\t // Revert to song number for currently playing song because user started playing new song.\n\t\t\tcurrentPlayingCell = $('.song-number[data-song-number=\"' + currentPlayingSong + ' \"]');\n\t\t\tcurrentPlayingCell.html(currentPlayingSong);\n\t}\n\tif (currentPlayingSong !== songNumber) {\n\t\t// Switch from Play -> Pause button to indicate new song is playing.\n\t\t$(this).html('<a class=\"album-song-button\"><i class=\"fa fa-pause\"></i></a>');\n\t\tcurrentPlayingSong = songNumber;\n\t} else if (currentPlayingSong === songNumber) {\n\t\t// Switch from Pause -> Play button to pause currently playing song.\n\t\t$(this).html('<a class=\"album-song-button\"><i class=\"fa fa-play\"></i></a>');\n\t\tcurrentPlayingSong = null;\n\t}\n};\n\n\n/* Function with album object as parameter */\nvar changeAlbumView = function(album) {\n\tvar $albumTitle = $('.album-title');\n\t$albumTitle.text(album.name);\n\n\tvar $albumArtist = $('.album-artist');\n\t$albumArtist.text(album.artist);\n\n\tvar $albumMeta = $('.album-meta-info');\n\t$albumMeta.text(album.year + \" on \" + album.label);\n\n\tvar $albumImage = $('.album-image img');\n\t$albumImage.attr('src', album.albumArtUrl);\n\n\tvar $songList = $('.album-song-listing');\n\t$songList.empty();\n\tvar songs = album.songs;\n\tfor (var i = 0; i < songs.length; i++) {\n\t\tvar songData = songs[i];\n\t\tvar $newRow = createSongRow(i + 1, songData.name, songData.length);\n\t\t$songList.append($newRow);\n\t}\n};\n\n\n/*  functional player controls */\nvar updateSeekPercentage = function($seekBar, event) {\n\tvar barWidth = $seekBar.width();\n\tvar offsetX = event.pageX - $seekBar.offset().left; // get distance from\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t//mouse click(event.pageX) - offset() from left most pt on seekbar\n\n\tvar offsetXPercent = (offsetX / $seekBar.width()) * 100; //offsetXpercent = offsetX / total width x 100% => pass it as value\n\toffsetXPercent = Math.max(0, offsetXPercent);\t\t\t\t\t\t// to css left:offsetXPercent %\n\toffsetXPercent = Math.min(100, offsetXPercent);\n\n\t// implement UI changes\n\tvar percentageString = offsetXPercent + '%';\n\t$seekBar.find('.fill').width(percentageString); //fill up to percentageString\n\t$seekBar.find('.thumb').css({'left' : percentageString}); // shift left to percentageString\n};\n\n\n/* moves .fill and .thumb to click event  */\nvar setupSeekBars = function() {\n\t$seekBars = $('.player-bar .seek-bar');\n\t$seekBars.click(function(event) {\n\t\tupdateSeekPercentage($(this), event);\n\t});\n\n/* musedown, mouseup events */\n\t$seekBars.find('.thumb').mousedown(function(event) {\n\t\tvar $seekBar = $(this).parent();\n\t\t$seekBar.addClass('no-animate');\n\n\t\t$(document).bind('mousemove.thumb', function(event) {\n\t\t\tupdateSeekPercentage($seekBar, event);\n\t\t});\n\n\t\t//cleanup\n\t\t$(document).bind('mouseup.thumb', function() {\n\t\t\t$seekBar.removeClass('no-animate');\n\n\t\t\t$(document).unbind('mousemove.thumb');\n\t\t\t$(document).unbind('mouseup.thumb');\n\t\t});\n\t});\n};\n\n\n/*  mouse co-ordinates function */\nvar mouseCoOrdinates = function() {\n\t$(this).click(function(eventX, eventY) {\n\t\tconsole.log('mouse co-ordinates are: x: ' + event.pageX + ' y: ' + event.pageY );\n\t});\n};\n\n\n // This 'if' condition is used to prevent the jQuery modifications\n // from happening on non-Album view pages.\n //  - Use a regex to validate that the url has \"/album\" in its path.\n\n if (document.URL.match(/\\/album.html/)) {\n \t$(document).ready(function() {\n \t\tchangeAlbumView(albumMarconi);\n \t\tsetupSeekBars();\n \t\tmouseCoOrdinates();\n \t\t$('.album-header-container').click(function() {\n \t\t\tchangeAlbumView(albumPicasso);\n \t\t});\n \t});\n }","/* Holds all the scripts for the specific pages */\n\nrequire('./landing');\nrequire('./collection');\nrequire('./album');\nrequire('./profile');","/*Jquery*/\n\nvar buildAlbumThumbnail = function() {\n\tvar template =\n\t\t'<div class=\"collection-album-container col-md-2\">'\n\t+ '\t\t<div class=\"collection-album-image-container\">'\n\t+ '\t\t\t<img src=\"/images/album-placeholder.png\">'\n\t+ '\t\t</div>'\n\t+ '\t\t<div class=\"caption album-collection-info\">'\n\t+ '\t\t\t<p>'\n\t+\t'\t\t\t\t<a class=\"album-name\" href=\"/album.html\">Album Name</a>'\n\t+ '\t\t\t\t<br />'\n\t+ '\t\t\t\t<a href=\"/album.html\">Artist name</a>'\n\t+ '\t\t\t\t<br />'\n\t+ '\t\t\t\tX songs'\n\t+ '\t\t\t\t<br/>'\n\t+\t'\t\t\t\tX:XX Total Length'\n\t+ '\t\t\t</p>'\n\t+\t'\t\t</div>'\n\t+ '\t</div>';\n\n\treturn $(template); //returns a Jquery object $(template) an HTML div\n};\n\nvar buildAlbumOverlay = function(albumURL) {\n\tvar template =\n\t\t\t'<div class=\"collection-album-image-overlay\">'\n\t\t+\t' <div class=\"collection-overlay-content\">'\n\t\t+\t'   <a class=\"collection-overlay-button\" href=\"' + albumURL + '\">'\n\t\t+\t'    <i class=\"fa fa-play\"></i>'\n\t\t+\t'   </a>'\n\t\t+\t'\t\t&nbsp;'\n\t\t+ '   <a class=\"collection-overlay-button\">'\n\t\t+ '\t\t\t<i class=\"fa fa-plus\"></i>'\n\t\t+ '   </a>'\n\t\t+\t' </div>'\n\t\t+\t'</div>'\n\t\t;\n\treturn $(template);\n};\n\nvar updateCollectionView = function() {\n\tvar $collection = $('.collection-container .row');\n\t$collection.empty(); //clear old html album views in collection container\n\n\tvar albumAmount = Math.floor((Math.random() * (100 - 25)) + 25);\n\tconsole.log(\"Number of albums:\" + albumAmount);\n\n\n\tfor (var i = 0; i < albumAmount; i++) {\n\t\tvar $newThumbnail = buildAlbumThumbnail();\n\t\t$collection.append($newThumbnail);\n\t}\n\n\tvar onHover = function(event) {\n\t\t$(this).append(buildAlbumOverlay('/album.html'));\n\t};\n\n\tvar offHover = function(event) {\n\t\t$(this).find('.collection-album-image-overlay').remove();\n\t};\n\n\t$collection.find('.collection-album-image-container').hover(onHover, offHover);\n};\n\nif (document.URL.match(/\\/collection.html/)) {\n\t//Wait until HTML is fully processed\n\t$(document).ready(function() {\n\t\tupdateCollectionView();\n\t});\n}","/* JQuery effects */\n\nvar newContent = function() {\n\tvar template =\n\t\t'\t<div class=\"container\">'\n\t+\t'\t\t<h1><span>Stay tuned…</span><br />'\n\t+\t'\t\t\tnew events<br />'\n\t+\t'\t\t\tcoming this<br />'\n\t+\t'\t\t\twinter'\n\t+\t' \t</h1>'\n\t+\t'\t</div>'\n\t;\n\treturn $(template);\n};\n\n/* Update hero content */\nvar showNewHeroContent = function() {\n\t$('.hero-content').click(function () {\n\t\t$(this).empty();\n\t\t$(this).append(newContent());\n\t\t$(this).fadeIn('slow', function() {\n\t\t\t$(this).css({'background' : 'url(images/band2.jpg) no-repeat', 'background-size' : 'cover'});\n\t\t\tconsole.log('Added new Hero content');\n\t\t});\n\t});\n};\n\n/* Overlay function */\nvar buildOverlay = function(pageURL) {\n\tvar template =\n\t\t'\t<div class=\"feature-box-overlay\">'\n\t+\t'\t\t<div class=\"feature-box-overlay-content\">'\n\t+\t'\t\t\t<a class=\"feature-box-overlay-button\" href=\"' + pageURL + '\">'\n\t+\t'\t\t\t\t<i class=\"fa fa-plus\"></i>'\n\t+\t'\t\t\t</a>'\n\t+\t'\t\t</div>'\n\t+\t'\t</div>'\n\t;\n\treturn $(template);\n};\n\n\nvar applyOverlay = function () {\n\t$features = $('.feature-box');\n\n\tvar onHover = function(event) {\n\t\t$(this).append(buildOverlay('/album.html'));\n\t};\n\tvar offHover = function(event) {\n\t\t$(this).find('.feature-box-overlay').remove();\n\t};\n\n\t$features.hover(onHover, offHover);\n\tconsole.log('Applying hover on feature images')\n};\n\n\nif (document.URL.match(/\\/index.html/)) {\n\t$(document).ready(function() {\n\t\tshowNewHeroContent();\n\t\tapplyOverlay();\n\t});\n}","/* jQuery for profile page */\n\nvar tabsContainer = \".user-profile-tabs-container\";\n\nvar selectTabHandler = function(event) {\n\t$tab = $(this);\n\t$(tabsContainer + \" li\").removeClass('active');\n\t$tab.parent().addClass('active');\n\n\tvar selectedTabName = $tab.attr('href');\n\tconsole.log(selectedTabName);\n\n\t$(\".tab-pane\").addClass('hidden'); //bootstrap class => display: none;\n\t$(selectedTabName).removeClass('hidden');\n\tevent.preventDefault();\n};\n\nif (document.URL.match(/\\/profile.html/)) {\n\t$(document).ready(function() {\n\t\tvar $tabs = $(tabsContainer + \" a\");\n\t\t$tabs.click(selectTabHandler);\n\t\t$tabs[0].click();\n\t});\n}","var http = require(\"http\"),\n    server;\n\nserver = http.createServer(function (req, res) {\n    res.writeHead(200, {\"Content-Type\": \"text/plain\"});\n    res.end(\"Hello World!\\n\");\n});\n\nserver.listen(3000);\n\nconsole.log(\"Server running on port 3000\");\n"]}